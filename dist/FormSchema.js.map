{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 213b337a52b064ac601c","webpack:///./src/components/FormSchemaInputArrayElement.js","webpack:///./src/lib/object.js","webpack:///./src/components/FormSchemaField.js","webpack:///./src/components/FormSchemaButtons.js","webpack:///./src/lib/components.js","webpack:///./src/components/FormSchemaFieldCheckboxItem.js","webpack:///./src/lib/parser.js","webpack:///./src/components/FormSchema.js","webpack:///./src/components/FormSchemaFieldSelectOption.js","webpack:///./src/components/FormSchemaInput.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_object","_components","functional","render","createElement","_ref","props","slots","input","listeners","field","_props$value","value","attrs","_props$name","attrName","argName","data","merge","$field","_extends","_typeof","element","component","default","equals","o1","o2","keys1","keys","length","findIndex","key","isScalar","test","dest","src","forEach","_instanceof","Array","_toConsumableArray","_FormSchemaInput","_interopRequireDefault","_FormSchemaFieldCheckboxItem","_FormSchemaFieldSelectOption","children","type","native","domProps","innerHTML","items","item","push","label","isArrayField","on","checked","includes","schemaType","required","unshift","option","slotsValue","buttonsWrapper","components","buttonswrapper","submitbutton","tags","h1","div","legend","fieldset","small","form","typed","textarea","select","button","renderFieldset","inputswrapper","description","renderLabel","_ref2","nodes","data-required-field","renderButton","_ref3","set","arguments","undefined","tagName","_ref4","init","_loop","radiogroup","checkboxgroup","inputwrapper","arraybutton","el","groupedArrayTypes","_ref5","_data","ref","_ref5$$field","_ref5$listeners","defaultGroup","text","_defineProperty","fieldTypesAsNotArray","inputName","index","concat","disableWrappingLabel","ARRAY_KEYWORDS","setCommonFields","schema","title","disabled","loadFields","fields","visible","properties","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","parseBoolean","parseArray","_i","keyword","enum","parseString","pattern","format","minLength","minlength","maxLength","maxlength","parseItems","map","setItemName","isRadio","replace","arrayOrderedValues","arrayUnorderedValues","filter","selected","singleValue","reverse","find","minItems","parseInt","maxItems","loop","_i2","multiple","_parser","_FormSchemaField","_FormSchemaButtons","setComponent","FormSchema","action","String","autocomplete","enctype","method","novalidate","Boolean","schemaLoaded","error","inputValues","created","watch","oldValue","_this","_schemaLoaded","_createElement","formNodes","event","target","eventInput","onInputArrayValue","onInput","change","changed","$slots","reset","submit","invalid","formwrapper","methods","loadDefaultValues","_this2","_field$attrs","isArray","itemsNum","$emit","triggerInputEvent","indexOf","splice","getAttribute","values","currentValue","$refs","__form","reportValidity","controls","elements","validity","checkValidity","e","_this3","$set","setErrorMessage","message","clearErrorMessage","_FormSchemaInputArrayElement","descriptionValue","descriptionElement","inputdesc","_buttonData","inputs","apply","v","buttonData","click"],"mappings":"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","file":"FormSchema.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"FormSchema\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FormSchema\"] = factory();\n\telse\n\t\troot[\"FormSchema\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"iaYj\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 213b337a52b064ac601c","import { merge } from '@/lib/object'\nimport { argName } from '@/lib/components'\n\nexport default {\n  functional: true,\n  render (createElement, { props, slots, listeners }) {\n    const { input, field, value = field.attrs.value, name = field.attrs.name } = props\n    const attrName = argName(input)\n    const data = {}\n\n    merge(data, input.data)\n\n    data.$field = field\n\n    data[attrName] = { ...input.data[attrName] }\n    data[attrName].name = name\n    data[attrName].value = typeof value === 'object' ? value[name] : value\n\n    return createElement(input.element.component, data, slots().default)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FormSchemaInputArrayElement.js","'use strict'\n\nexport function equals (o1, o2) {\n  const keys1 = Object.keys(o1)\n\n  if (keys1.length !== Object.keys(o2).length) {\n    return false\n  }\n\n  return keys1.findIndex((key) => !o2.hasOwnProperty(key) || o1[key] !== o2[key]) === -1\n}\n\nexport function isScalar (value) {\n  if (value === null) {\n    return true\n  }\n  return /string|number|boolean|undefined|function/.test(typeof value)\n}\n\nexport function merge (dest, src) {\n  Object.keys(src).forEach((key) => {\n    const value = src[key]\n\n    if (isScalar(value)) {\n      dest[key] = value\n    } else if (value instanceof Array) {\n      dest[key] = [ ...value ]\n    } else {\n      if (!dest[key]) {\n        dest[key] = {}\n      }\n      merge(dest[key], value)\n    }\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/object.js","import { input as getInput } from '@/lib/components'\nimport FormSchemaInput from './FormSchemaInput'\nimport FormSchemaFieldCheckboxItem from './FormSchemaFieldCheckboxItem'\nimport FormSchemaFieldSelectOption from './FormSchemaFieldSelectOption'\n\nexport default {\n  functional: true,\n  render (createElement, { props, listeners }) {\n    const { field, value = field.attrs.value } = props\n\n    const input = getInput({ field, listeners })\n    const children = []\n\n    switch (field.attrs.type) {\n      case 'textarea':\n        if (input.element.native) {\n          delete input.data.attrs.type\n          delete input.data.attrs.value\n\n          input.data.domProps.innerHTML = value\n        }\n        break\n\n      case 'radio':\n        if (field.hasOwnProperty('items')) {\n          field.items.forEach((item) => {\n            children.push(createElement(FormSchemaFieldCheckboxItem, {\n              props: {\n                item,\n                value,\n                field: { ...field, label: item.label, isArrayField: false }\n              },\n              on: listeners\n            }))\n          })\n        }\n        break\n\n      case 'checkbox':\n        if (field.hasOwnProperty('items')) {\n          field.items.forEach((item) => {\n            children.push(createElement(FormSchemaFieldCheckboxItem, {\n              props: {\n                item,\n                value,\n                field: { ...field, label: item.label },\n                checked: value.includes(item.value)\n              },\n              on: listeners\n            }))\n          })\n        } else if (field.schemaType === 'boolean') {\n          const item = { label: field.label }\n          const checked = value === true\n\n          return createElement(FormSchemaFieldCheckboxItem, {\n            props: { item, value, field, checked },\n            on: listeners\n          })\n        }\n        break\n\n      case 'select':\n        const items = [ ...field.items ]\n\n        if (field.attrs.required) {\n          items.unshift({ label: null, value: '' })\n        }\n\n        if (input.element.native) {\n          delete input.data.attrs.type\n          delete input.data.attrs.value\n        }\n\n        items.forEach((option) => {\n          children.push(createElement(FormSchemaFieldSelectOption, {\n            props: { field, value, option }\n          }))\n        })\n        break\n    }\n\n    return createElement(FormSchemaInput, {\n      props: { field, value, input }\n    }, children)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FormSchemaField.js","import { components } from '@/lib/components'\n\nexport default {\n  functional: true,\n  render (createElement, { data, slots }) {\n    const slotsValue = slots()\n    const buttonsWrapper = components.buttonswrapper\n\n    if (slotsValue.default) {\n      return createElement(\n        buttonsWrapper.component, data, slotsValue.default)\n    }\n\n    return createElement(buttonsWrapper.component, [\n      createElement(components.submitbutton.component, data)\n    ])\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FormSchemaButtons.js","'use strict'\n\nimport { merge } from './object'\n\nconst tags = {\n  h1: ['title'],\n  p: ['description'],\n  div: [\n    'error', 'textgroup', 'buttonswrapper', 'formwrapper',\n    'inputswrapper', 'inputwrapper', 'defaultGroup'\n  ],\n  legend: ['legend'],\n  fieldset: ['radiogroup', 'checkboxgroup'],\n  small: ['inputdesc'],\n  form: ['form'],\n  input: {\n    typed: [\n      'checkbox', 'color', 'date', 'datetime', 'datetime-local',\n      'email', 'file', 'hidden', 'image', 'month', 'number',\n      'password', 'radio', 'range', 'search', 'tel', 'text',\n      'time', 'url', 'week'\n    ]\n  },\n  textarea: ['textarea'],\n  select: ['select'],\n  option: ['option'],\n  label: ['label'],\n  button: ['submitbutton', 'arraybutton']\n}\n\nexport const components = {}\n\nexport function renderFieldset (createElement, { data, props, slots }) {\n  const children = [\n    createElement(components.inputswrapper.component, slots().default)\n  ]\n\n  if (data.$field.description) {\n    children.unshift(createElement(\n      components.legend.component, {\n        //         [argName(components.legend)]: legend\n      }, data.$field.description))\n  }\n\n  return createElement('fieldset', {\n    attrs: {\n      name: data.$field.attrs.name\n    }\n  }, children)\n}\n\nexport function renderLabel (createElement, { data, props, slots }) {\n  const nodes = slots().default || []\n  const field = props.field || data.$field\n\n  if (!field.label) {\n    return nodes.length === 1 ? nodes[0] : nodes\n  }\n\n  nodes.unshift(createElement('span', {\n    attrs: {\n      'data-required-field': field.attrs.required ? 'true' : 'false'\n    }\n  }, field.label))\n\n  return createElement('label', nodes)\n}\n\nexport const renderButton = (type, label) => (createElement, { data }) => {\n  if (!data.attrs) {\n    data.attrs = {}\n  }\n\n  data.attrs.type = type\n\n  return createElement('button', data, label)\n}\n\nexport function set (type, component, option = null, native = false) {\n  components[type] = {\n    type,\n    native,\n    tagName: component,\n    component: typeof component === 'string' ? {\n      functional: true,\n      render (createElement, { data, slots }) {\n        const nodes = slots().default || []\n\n        merge(data, option)\n\n        if (nodes.length === 0 && Object.keys(data).length === 0) {\n          return null\n        }\n\n        return createElement(component, data, nodes)\n      }\n    } : component\n  }\n}\n\nexport function init () {\n  for (let component in tags) {\n    delete components[component]\n\n    if (tags[component] instanceof Array) {\n      tags[component].forEach((name) => set(name, component, {}, true))\n    } else {\n      tags[component].typed.forEach((type) => {\n        set(type, component, { attrs: { type } }, true)\n      })\n    }\n  }\n\n  components.radiogroup.component.render = renderFieldset\n  components.checkboxgroup.component.render = renderFieldset\n  components.inputwrapper.component.render = renderLabel\n  components.submitbutton.component.render = renderButton('submit', 'Submit')\n  components.arraybutton.component.render = renderButton('button', 'Add')\n}\n\nexport function argName (el) {\n  return el.native ? 'attrs' : 'props'\n}\n\nexport const groupedArrayTypes = [\n  'radio', 'checkbox', 'input', 'textarea'\n]\n\nexport function input ({ field, ref, $field = field, listeners = {} }) {\n  const { type } = field.attrs\n  const element = field.hasOwnProperty('items') && groupedArrayTypes.includes(type)\n    ? components[`${type}group`] || components.defaultGroup\n    : components[type] || components.text\n\n  return {\n    ref,\n    element: element,\n    data: {\n      $field,\n      props: {},\n      domProps: {},\n      [argName(element)]: { ...field.attrs },\n      on: listeners\n    }\n  }\n}\n\nexport const fieldTypesAsNotArray = [\n  'radio', 'textarea', 'select'\n]\n\nexport const inputName = (field, index) => `${field.attrs.name}-${index}`\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/components.js","import { input as getInput } from '@/lib/components'\nimport FormSchemaInput from './FormSchemaInput'\n\nexport default {\n  functional: true,\n  render (createElement, { props, listeners }) {\n    const { item, field, value = field.attrs.value, checked, disableWrappingLabel } = props\n\n    const attrs = field.attrs\n    const description = item.description\n    const input = getInput({\n      ref: item.ref,\n      field: {\n        label: item.label,\n        attrs: {\n          name: item.name || attrs.name,\n          type: attrs.type,\n          value: field.schemaType === 'boolean' ? undefined : item.value,\n          checked: typeof checked === 'undefined'\n            ? value instanceof Array\n              ? value.includes(item.value)\n              : item.value === value\n            : checked\n        },\n        $field: { ...field, label: item.label }\n      },\n      listeners\n    })\n\n    return createElement(FormSchemaInput, {\n      props: {\n        value,\n        input,\n        description,\n        disableWrappingLabel,\n        field: { ...field, label: item.label }\n      },\n      on: input.data.listeners\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FormSchemaFieldCheckboxItem.js","'use strict'\n\n/* eslint-disable no-labels */\n\nconst ARRAY_KEYWORDS = ['anyOf', 'oneOf', 'enum']\n\nexport function setCommonFields (schema, field) {\n  field.attrs.value = field.attrs.hasOwnProperty('value')\n    ? field.attrs.value\n    : schema.default || ''\n\n  field.schemaType = schema.type\n  field.label = schema.title || ''\n  field.description = schema.description || ''\n  field.attrs.required = schema.required || false\n  field.attrs.disabled = schema.disabled || false\n}\n\nexport function loadFields (schema, fields, name = null) {\n  if (!schema || schema.visible === false) {\n    return\n  }\n  switch (schema.type) {\n    case 'object':\n      for (let key in schema.properties) {\n        if (schema.required) {\n          for (let field of schema.required) {\n            schema.properties[field].required = true\n          }\n        }\n\n        loadFields(schema.properties[key], fields, key)\n      }\n      break\n\n    case 'boolean':\n      fields.push(parseBoolean(schema, name))\n      break\n\n    case 'array':\n      fields.push(parseArray(schema, name))\n      break\n\n    case 'integer':\n    case 'number':\n    case 'string':\n      for (let keyword of ARRAY_KEYWORDS) {\n        if (schema.hasOwnProperty(keyword)) {\n          schema.items = {\n            type: schema.type,\n            enum: schema[keyword]\n          }\n\n          fields.push(parseArray(schema, name))\n\n          return\n        }\n      }\n      fields.push(parseString(schema, name))\n      break\n  }\n}\n\nexport function parseBoolean (schema, name = null) {\n  const field = {\n    attrs: schema.attrs || {}\n  }\n\n  setCommonFields(schema, field)\n\n  if (!field.attrs.type) {\n    field.attrs.type = 'checkbox'\n  }\n\n  if (!field.attrs.hasOwnProperty('checked')) {\n    field.attrs.checked = schema.default === true\n  }\n\n  delete field.attrs.value\n\n  if (name) {\n    field.attrs.name = name\n  }\n\n  return field\n}\n\nexport function parseString (schema, name = null) {\n  const field = {\n    attrs: schema.attrs || {}\n  }\n\n  if (schema.pattern) {\n    field.attrs.pattern = schema.pattern\n  }\n\n  if (schema.format) {\n    switch (schema.format) {\n      case 'email':\n        if (!field.attrs.type) {\n          field.attrs.type = 'email'\n        }\n        break\n\n      case 'uri':\n        if (!field.attrs.type) {\n          field.attrs.type = 'url'\n        }\n        break\n    }\n  }\n\n  if (!field.attrs.type) {\n    switch (schema.type) {\n      case 'number':\n      case 'integer':\n        field.attrs.type = 'number'\n        break\n      default:\n        field.attrs.type = 'text'\n    }\n  }\n\n  setCommonFields(schema, field)\n\n  if (name) {\n    field.attrs.name = name\n  }\n\n  if (schema.minLength) {\n    field.attrs.minlength = schema.minLength\n  }\n\n  if (schema.maxLength) {\n    field.attrs.maxlength = schema.maxLength\n  }\n\n  return field\n}\n\nexport function parseItems (items) {\n  return items.map((item) => {\n    if (typeof item !== 'object') {\n      return { value: item, label: item }\n    }\n\n    return item\n  })\n}\n\nexport const setItemName = (name, isRadio = false) => (item, i) => {\n  if (isRadio) {\n    item.name = name\n  }\n\n  if (!item.name) {\n    item.name = name ? `${name}-` : ''\n    item.name += item.label.replace(/\\s+/g, '-')\n  }\n\n  if (name) {\n    item.ref = `${name}-${i}`\n  }\n\n  return item\n}\n\nexport function arrayOrderedValues (field) {\n  return field.items.map((item) => item.checked ? item.value : undefined)\n}\n\nexport function arrayUnorderedValues (field) {\n  return field.items\n    .filter((item) => (item.checked || item.selected))\n    .map((item) => item.value)\n}\n\nexport function singleValue (field) {\n  const item = field.items.reverse().find((item) => item.checked || item.selected)\n\n  return item ? item.value : ''\n}\n\nexport function parseArray (schema, name = null) {\n  const field = {\n    attrs: schema.attrs || {}\n  }\n\n  setCommonFields(schema, field)\n\n  if (name) {\n    field.attrs.name = name\n  }\n\n  field.items = []\n  field.minItems = parseInt(schema.minItems) || 1\n  field.maxItems = parseInt(schema.maxItems) || 1000\n\n  loop:\n  for (let keyword of ARRAY_KEYWORDS) {\n    if (schema.hasOwnProperty(keyword)) {\n      switch (keyword) {\n        case 'enum':\n          if (!field.attrs.type) {\n            field.attrs.type = 'select'\n          }\n\n          field.items = parseItems(schema[keyword])\n\n          if (field.attrs.value.length === 0) {\n            field.attrs.value = field.schemaType === 'array'\n              ? arrayUnorderedValues(field)\n              : singleValue(field)\n          }\n          break loop\n\n        case 'oneOf':\n          field.attrs.type = 'radio'\n          field.attrs.value = field.attrs.value || ''\n\n          field.items = parseItems(schema[keyword]).map(setItemName(name, true))\n\n          if (field.attrs.value.length === 0) {\n            field.attrs.value = singleValue(field)\n          }\n          break loop\n\n        case 'anyOf':\n          field.attrs.type = 'checkbox'\n          field.attrs.value = field.attrs.value || []\n\n          field.items = parseItems(schema[keyword]).map(setItemName(name))\n          field.isArrayField = true\n\n          if (field.attrs.value.length === 0) {\n            field.attrs.value = arrayOrderedValues(field)\n          }\n          break loop\n      }\n    }\n  }\n\n  if (!field.attrs.type) {\n    field.isArrayField = true\n    field.attrs.type = 'text'\n  } else if (field.attrs.type === 'select') {\n    field.attrs.multiple = field.schemaType === 'array'\n    field.attrs.value = field.attrs.value || field.attrs.multiple ? [] : ''\n\n    if (field.attrs.value.length === 0) {\n      if (field.attrs.multiple) {\n        field.isArrayField = true\n        field.attrs.value = arrayUnorderedValues(field)\n      } else {\n        field.attrs.value = singleValue(field)\n      }\n    }\n  }\n\n  return field\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/parser.js","import { loadFields } from '@/lib/parser'\nimport { equals, merge } from '@/lib/object'\nimport { init, components, set, argName, inputName } from '@/lib/components'\nimport FormSchemaField from './FormSchemaField'\nimport FormSchemaButtons from './FormSchemaButtons'\n\ninit()\n\nexport const setComponent = set\n\nexport const FormSchema = {\n  name: 'form-schema',\n  props: {\n    /**\n     * The JSON Schema object.\n     */\n    schema: { type: Object, required: true },\n\n    /**\n     * Use this directive to create two-way data bindings with the component. It automatically picks the correct way to update the element based on the input type.\n     * @model\n     * @default {}\n     */\n    value: { type: Object, default: () => ({}) },\n\n    /**\n     * The URI of a program that processes the form information.\n     */\n    action: { type: String },\n\n    /**\n     * This property indicates whether the value of the control can be automatically completed by the browser. Possible values are: `off` and `on`.\n     */\n    autocomplete: { type: String },\n\n    /**\n     * When the value of the method attribute is post, enctype is the MIME type of content that is used to submit the form to the server. Possible values are:\n     * - application/x-www-form-urlencoded: The default value if the attribute is not specified.\n     * - multipart/form-data: The value used for an <input> element with the type attribute set to \"file\".\n     * - text/plain (HTML5)\n     */\n    enctype: { type: String, default: 'application/x-www-form-urlencoded' },\n\n    /**\n     * The HTTP method that the browser uses to submit the form. Possible values are:\n     * - post: Corresponds to the HTTP POST method ; form data are included in the body of the form and sent to the server.\n     * - get: Corresponds to the HTTP GET method; form data are appended to the action attribute URI with a '?' as separator, and the resulting URI is sent to the server. Use this method when the form has no side-effects and contains only ASCII characters.\n     */\n    method: { type: String, default: 'post' },\n\n    /**\n     * This Boolean attribute indicates that the form is not to be validated when submitted.\n     */\n    novalidate: { type: Boolean }\n  },\n  data: () => ({\n    schemaLoaded: { schema: {}, fields: [] },\n    default: {},\n    error: null,\n    data: {},\n    inputValues: {}\n  }),\n  created () {\n    this.init(this.schema)\n  },\n  watch: {\n    schema (value, oldValue) {\n      if (!equals(value, oldValue)) {\n        this.init(value)\n      }\n    }\n  },\n  render (createElement) {\n    const { schema, fields } = this.schemaLoaded\n    const nodes = []\n\n    if (schema.title) {\n      nodes.push(createElement(components.title.component, schema.title))\n    }\n\n    if (schema.description) {\n      nodes.push(createElement(\n        components.description.component, schema.description))\n    }\n\n    if (this.error) {\n      nodes.push(createElement(components.error.component, this.error))\n    }\n\n    const formNodes = fields.map((field) => {\n      const value = this.data[field.attrs.name]\n\n      return createElement(FormSchemaField, {\n        props: { field, value },\n        on: {\n          input: (event) => {\n            const target = event.target\n            const data = event.target.value\n            const eventInput = { field, data, target }\n\n            if (field.isArrayField) {\n              this.onInputArrayValue(eventInput)\n            } else {\n              this.onInput(eventInput)\n            }\n          },\n          change: (event) => {\n            const target = event.target\n            const data = event.target.value\n            const eventInput = { field, data, target }\n\n            if (field.isArrayField) {\n              this.onInputArrayValue(eventInput, false)\n            } else {\n              this.onInput(eventInput, false)\n            }\n\n            this.changed()\n          }\n        }\n      })\n    })\n\n    if (formNodes.length) {\n      formNodes.push(createElement(FormSchemaButtons, this.$slots.default))\n\n      nodes.push(createElement(components.form.component, {\n        ref: '__form',\n        [argName(components.form)]: {\n          action: this.action,\n          enctype: this.enctype,\n          method: this.method,\n          autocomplete: this.autocomplete,\n          novalidate: this.novalidate\n        },\n        on: {\n          reset: this.reset,\n          submit: this.submit,\n          invalid: this.invalid\n        }\n      }, formNodes))\n    }\n\n    return createElement(components.formwrapper.component, nodes)\n  },\n  setComponent: setComponent,\n  methods: {\n    /**\n     * @private\n     */\n    init (schema) {\n      const fields = []\n\n      loadFields(schema, fields)\n      this.loadDefaultValues(fields)\n\n      this.schemaLoaded = { schema, fields }\n    },\n\n    /**\n     * @private\n     */\n    loadDefaultValues (fields) {\n      this.default = {}\n      this.inputValues = {}\n\n      fields.forEach((field) => {\n        const { type, name } = field.attrs\n\n        this.default[name] = field.schemaType === 'boolean'\n          ? typeof this.value[name] === 'boolean'\n            ? this.value[name]\n            : field.attrs.checked === true\n          : this.value[name] || field.attrs.value\n\n        if (field.isArrayField) {\n          if (!Array.isArray(this.default[name])) {\n            this.default[name] = []\n          } else {\n            this.default[name] = this.default[name].filter((value, i) => {\n              this.inputValues[inputName(field, i)] = value\n              return value !== undefined\n            })\n          }\n\n          field.itemsNum = type === 'checkbox'\n            ? field.items.length\n            : field.minItems\n        }\n      })\n\n      const data = {}\n\n      merge(data, this.default)\n\n      this.data = data\n\n      this.$emit('input', this.data)\n    },\n\n    /**\n     * @private\n     */\n    onInput (event, triggerInputEvent = true) {\n      if (event.field.schemaType === 'boolean') {\n        event.data = event.target.checked\n      }\n\n      this.data[event.field.attrs.name] = event.data\n\n      if (triggerInputEvent) {\n        /**\n         * Fired synchronously when the value of an element is changed.\n         */\n        this.$emit('input', this.data)\n      }\n    },\n\n    /**\n     * @private\n     */\n    onInputArrayValue (event, triggerInputEvent = true) {\n      if (event.field.attrs.type === 'checkbox') {\n        if (event.target.checked) {\n          if (!this.data[event.field.attrs.name].includes(event.data)) {\n            this.data[event.field.attrs.name].push(event.data)\n          }\n        } else {\n          const index = this.data[event.field.attrs.name].indexOf(event.data)\n\n          if (index > -1) {\n            this.data[event.field.attrs.name].splice(index, 1)\n          }\n        }\n      } else {\n        const index = event.target.getAttribute('data-fs-index')\n        const key = inputName(event.field, index)\n\n        this.inputValues[key] = event.data\n\n        const values = []\n\n        for (let i = 0; i < event.field.itemsNum; i++) {\n          const currentValue = this.inputValues[inputName(event.field, i)]\n\n          if (currentValue) {\n            values.push(currentValue)\n          }\n        }\n\n        this.data[event.field.attrs.name] = values\n      }\n\n      if (triggerInputEvent) {\n        /**\n         * Fired synchronously when the value of an element is changed.\n         */\n        this.$emit('input', this.data)\n      }\n    },\n\n    /**\n     * @private\n     */\n    changed () {\n      if (!equals(this.data, this.default)) {\n        /**\n         * Fired when a change to the element's value is committed by the user.\n         */\n        this.$emit('change', this.data)\n      }\n    },\n\n    /**\n     * Get the form reference.\n     */\n    form () {\n      return this.$refs.__form\n    },\n\n    /**\n     * Returns true if the element's child controls satisfy their validation constraints. When false is returned, cancelable invalid events are fired for each invalid child and validation problems are reported to the user.\n     */\n    reportValidity () {\n      const controls = this.form().elements\n      let validity = true\n\n      for (let i = 0; i < controls.length; i++) {\n        if ('checkValidity' in controls[i]) {\n          validity = validity && controls[i].checkValidity()\n        }\n      }\n\n      return validity\n    },\n\n    /**\n     * Checks whether the form has any constraints and whether it satisfies them. If the form fails its constraints, the browser fires a cancelable `invalid` event at the element, and then returns false.\n     * @aliasof reportValidity\n     */\n    checkValidity () {\n      return this.reportValidity()\n    },\n\n    /**\n     * @private\n     */\n    invalid (e) {\n      /**\n       * Fired when a submittable element has been checked and doesn't satisfy its constraints. The validity of submittable elements is checked before submitting their owner form, or after the `checkValidity()` of the element or its owner form is called.\n       */\n      this.$emit('invalid', e)\n    },\n\n    /**\n     * Reset the value of all elements of the parent form.\n     */\n    reset () {\n      for (let key in this.inputValues) {\n        delete this.inputValues[key]\n      }\n\n      this.schemaLoaded.fields.forEach((field) => {\n        const { name } = field.attrs\n\n        this.$set(this.data, name, this.default[name])\n\n        if (field.isArrayField) {\n          this.data[name].forEach((value, i) => {\n            this.inputValues[inputName(field, i)] = value\n          })\n        }\n      })\n    },\n\n    /**\n     * Send the content of the form to the server.\n     */\n    submit (event) {\n      if (this.checkValidity()) {\n        /**\n         * Fired when a form is submitted\n         */\n        this.$emit('submit', event)\n      }\n    },\n\n    /**\n     * Set a message error.\n     */\n    setErrorMessage (message) {\n      this.error = message\n    },\n\n    /**\n     * clear the message error.\n     */\n    clearErrorMessage () {\n      this.error = null\n    }\n  }\n}\n\nexport default FormSchema\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FormSchema.js","import { components, input } from '@/lib/components'\n\nexport default {\n  functional: true,\n  render (createElement, { props }) {\n    const { option, value } = props\n\n    const field = {\n      label: option.label,\n      attrs: {\n        value: option.value,\n        selected: value instanceof Array\n          ? value.includes(option.value)\n          : typeof value === 'undefined'\n            ? option.selected || false\n            : option.value === value\n      }\n    }\n    const data = input({ field }).data\n\n    return createElement(components.option.component, data, option.label)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FormSchemaFieldSelectOption.js","import { components, inputName, argName } from '@/lib/components'\nimport FormSchemaInputArrayElement from './FormSchemaInputArrayElement'\n\nexport default {\n  functional: true,\n  render (createElement, { props, slots, listeners }) {\n    const { description, field, value = field.attrs.value, input, disableWrappingLabel } = props\n    const children = slots().default || []\n    const descriptionValue = description || field.description\n\n    const descriptionElement = descriptionValue\n      ? createElement(components.inputdesc.component, descriptionValue)\n      : null\n\n    if (field.isArrayField && field.attrs.type !== 'select') {\n      if (field.attrs.type === 'checkbox') {\n        const name = field.attrs.name\n        const data = {\n          props: {\n            name, field, value, input\n          },\n          on: listeners\n        }\n\n        return createElement(components.inputwrapper.component, data, [\n          createElement(FormSchemaInputArrayElement, data, children),\n          descriptionElement\n        ])\n      }\n\n      const inputs = Array.apply(null, Array(field.itemsNum)).map((v, i) => {\n        const name = inputName(field, i)\n\n        input.data.attrs['data-fs-index'] = i\n\n        return createElement(FormSchemaInputArrayElement, {\n          props: {\n            name, field, value, input\n          },\n          on: listeners\n        }, children)\n      })\n\n      const button = components.arraybutton\n      const buttonData = {\n        [argName(button)]: {\n          disabled: field.maxItems <= field.itemsNum\n        },\n        on: {\n          click () {\n            if (field.itemsNum < field.maxItems) {\n              field.itemsNum++\n            }\n          }\n        }\n      }\n\n      inputs.push(createElement(button.component, buttonData))\n      inputs.push(descriptionElement)\n\n      return createElement(components.inputwrapper.component, {\n        props: { field }\n      }, [\n        createElement(components.inputswrapper.component, {\n          props: { field }\n        }, inputs)\n      ])\n    }\n\n    const nodes = [\n      createElement(input.element.component, input.data, children),\n      descriptionElement\n    ]\n\n    if (disableWrappingLabel) {\n      return nodes\n    }\n\n    return createElement(components.inputwrapper.component, {\n      props: { field }\n    }, nodes)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FormSchemaInput.js"],"sourceRoot":""}