{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap bc0ada07ddb327659fb5","webpack:///./src/components/FormSchemaInputArrayElement.js","webpack:///./src/components/FormSchemaInputDescription.js","webpack:///./src/lib/object.js","webpack:///./src/components/FormSchemaField.js","webpack:///./src/components/FormSchemaButtons.js","webpack:///./src/lib/components.js","webpack:///./src/components/FormSchemaFieldCheckboxItem.js","webpack:///./src/lib/parser.js","webpack:///./src/components/FormSchema.js","webpack:///./src/components/FormSchemaFieldSelectOption.js","webpack:///./src/components/FormSchemaWrappingInput.js","webpack:///./src/components/FormSchemaInput.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_components","functional","render","createElement","context","_extends2","field","props","input","element","vm","ref","attrs","attrName","option","native","value","type","inputValues","component","_extends","_defineProperty","event","target","undefined","values","j","itemsNum","currentValue","inputName","push","data","$emit","change","changed","slots","default","text","equals","o1","o2","keys1","keys","length","findIndex","key","_FormSchemaInput","_interopRequireDefault","_FormSchemaWrappingInput","_FormSchemaFieldCheckboxItem","_FormSchemaFieldSelectOption","FormSchemaField","inputWrappingClass","children","domProps","innerHTML","items","forEach","item","disableWrappingLabel","label","checked","includes","required","unshift","parent","buttonWrapper","components","buttonswrapper","labelOptions","elementOptions","button","_instanceof","Array","defaultOption","buttonOptions","_object","tags","h1","div","legend","fieldset","form","typed","textarea","select","defineComponent","tag","_typeof","renderFieldset","_ref","inputswrapper","inputswrapperOptions","description","legendOptions","init","_loop","radiogroup","checkboxgroup","set","arguments","el","extendingOptions","elProps","groupedArrayTypes","_ref3","defaultGroup","fieldOptions","on","fieldTypesAsNotArray","index","concat","initFields","fields","schemaType","isArrayField","isArray","filter","minItems","freeze","_context$props","ARRAY_KEYWORDS","setCommonFields","schema","title","disabled","loadFields","visible","properties","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","parseBoolean","parseArray","_i","keyword","enum","parseString","pattern","format","minLength","minlength","maxLength","maxlength","parseItems","map","setItemName","replace","arrayValues","singleValue","reverse","find","selected","parseInt","maxItems","loop","_i2","multiple","_parser","_FormSchemaField","_FormSchemaButtons","setComponent","FormSchema","Promise","action","String","autocomplete","enctype","method","novalidate","Boolean","schemaLoaded","error","created","then","_this","nodes","errorOptions","formNodes","$slots","formOptions","reset","submit","stopPropagation","invalid","methods","seal","controls","elements","Error","$refs","__form","reportValidity","validity","checkValidity","e","_this2","$set","setErrorMessage","message","clearErrorMessage","labelNodes","data-required-field","class","_FormSchemaInputDescription","_FormSchemaInputArrayElement","descriptionElement","apply","v","arraybutton","click","$forceUpdate","buttonElement"],"mappings":"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","file":"FormSchema.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"FormSchema\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FormSchema\"] = factory();\n\telse\n\t\troot[\"FormSchema\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"iaYj\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bc0ada07ddb327659fb5","import { inputName } from '../lib/components'\n\nexport default {\n  functional: true,\n  render (createElement, context) {\n    const field = context.props.field\n    const input = context.props.input\n    const element = context.props.element\n    const vm = context.props.vm\n    const name = context.props.ref\n\n    const attrs = field.attrs\n    const attrName = element.option.native ? 'attrs' : 'props'\n    const value = attrs.type === 'checkbox'\n      ? input[attrName].value\n      : vm.inputValues[name]\n\n    return createElement(element.component, {\n      ...input,\n      ref: name,\n      [attrName]: { ...input[attrName], name, value },\n      on: {\n        input: (event) => {\n          const value = event && event.target\n            ? event.target.value\n            : event\n\n          vm.inputValues[name] = attrs.type === 'checkbox' && vm.inputValues[name] !== undefined\n            ? undefined\n            : value\n\n          const values = []\n\n          for (let j = 0; j < field.itemsNum; j++) {\n            const currentValue = vm.inputValues[inputName(field, j)]\n\n            if (currentValue) {\n              values.push(currentValue)\n            }\n          }\n\n          vm.data[attrs.name] = values\n\n          /**\n           * Fired synchronously when the value of an element is changed.\n           */\n          vm.$emit('input', vm.data)\n        },\n        change: vm.changed\n      }\n    }, context.slots().default)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FormSchemaInputArrayElement.js","export default {\n  functional: true,\n  render (createElement, context) {\n    if (context.props.text) {\n      return createElement('small', context.props.text)\n    }\n\n    return null\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FormSchemaInputDescription.js","'use strict'\n\nexport function equals (o1, o2) {\n  const keys1 = Object.keys(o1)\n\n  if (keys1.length !== Object.keys(o2).length) {\n    return false\n  }\n\n  return keys1.findIndex((key) => !o2.hasOwnProperty(key) || o1[key] !== o2[key]) === -1\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/object.js","import { input as getInput, inputName } from '../lib/components'\nimport FormSchemaInput from './FormSchemaInput'\nimport FormSchemaWrappingInput from './FormSchemaWrappingInput'\nimport FormSchemaFieldCheckboxItem from './FormSchemaFieldCheckboxItem'\nimport FormSchemaFieldSelectOption from './FormSchemaFieldSelectOption'\n\nconst FormSchemaField = {\n  functional: true,\n  render (createElement, context) {\n    const vm = context.props.vm\n    const inputWrappingClass = context.props.inputWrappingClass\n    const field = context.props.field\n    const attrs = field.attrs\n\n    const input = getInput({ vm, field })\n    const element = input.element\n    const children = []\n\n    switch (attrs.type) {\n      case 'textarea':\n        if (element.option.native) {\n          delete input.attrs.type\n          delete input.attrs.value\n\n          input.domProps.innerHTML = vm.data[attrs.name]\n        }\n        break\n\n      case 'radio':\n        if (field.hasOwnProperty('items')) {\n          field.items.forEach((item) => {\n            children.push(createElement(FormSchemaFieldCheckboxItem, {\n              props: { vm, field, item, disableWrappingLabel: true }\n            }))\n          })\n\n          return createElement(FormSchemaInput, {\n            props: { vm, field, input, element }\n          }, children)\n        }\n        break\n\n      case 'checkbox':\n        if (field.hasOwnProperty('items')) {\n          field.items.forEach((item, i) => {\n            children.push(createElement(FormSchemaFieldCheckboxItem, {\n              props: {\n                vm,\n                item,\n                ref: inputName(field, i),\n                field: { ...field, label: item.label },\n                checked: vm.data[field.attrs.name].includes(item.value)\n              }\n            }))\n          })\n\n          return createElement(FormSchemaInput, {\n            props: { vm, field, input, element }\n          }, children)\n        }\n        break\n\n      case 'select':\n        const items = [ ...field.items ]\n\n        if (!attrs.required) {\n          items.unshift({ label: null, value: '' })\n        }\n\n        if (input.attrs) {\n          delete input.attrs.type\n          delete input.attrs.value\n          delete input.attrs.native\n        }\n\n        items.forEach((option) => {\n          children.push(createElement(FormSchemaFieldSelectOption, {\n            props: { vm, field, option, disableWrappingLabel: true }\n          }))\n        })\n        break\n    }\n\n    return createElement(FormSchemaWrappingInput, {\n      props: { vm, field, element, inputWrappingClass }\n    }, [\n      createElement(FormSchemaInput, {\n        props: { vm, field, input, element }\n      }, children)\n    ])\n  }\n}\n\nexport default FormSchemaField\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FormSchemaField.js","import { components, option, elementOptions } from '../lib/components'\n\nexport default {\n  functional: true,\n  render (createElement, context) {\n    const vm = context.parent\n    const buttonWrapper = components.buttonswrapper\n    const labelOptions = elementOptions(vm, buttonWrapper)\n    const slots = context.slots()\n    const button = slots.default\n      ? { component: slots.default, option }\n      : components.button\n\n    if (button.component instanceof Array) {\n      return createElement(\n        buttonWrapper.component, labelOptions, button.component)\n    }\n\n    const label = button.option.label || button.defaultOption.label\n    const buttonOptions = elementOptions(vm, button, { type: 'submit' })\n\n    if (button.option.native) {\n      delete buttonOptions.attrs.label\n    }\n\n    return createElement(buttonWrapper.component, labelOptions, [\n      createElement(button.component, buttonOptions, label)\n    ])\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FormSchemaButtons.js","'use strict'\n\nimport { equals } from './object'\n\nconst tags = {\n  h1: ['title'],\n  p: ['description'],\n  div: [\n    'error', 'textgroup', 'inputswrapper',\n    'buttonswrapper', 'defaultGroup'\n  ],\n  legend: ['legend'],\n  fieldset: ['radiogroup', 'checkboxgroup'],\n  form: ['form'],\n  input: {\n    typed: [\n      'checkbox', 'color', 'date', 'datetime', 'datetime-local',\n      'email', 'file', 'hidden', 'image', 'month', 'number',\n      'password', 'radio', 'range', 'search', 'tel', 'text',\n      'time', 'url', 'week'\n    ]\n  },\n  textarea: ['textarea'],\n  select: ['select'],\n  option: ['option'],\n  label: ['label'],\n  button: [\n    { component: 'button', option: { type: 'submit', label: 'Submit' } },\n    { component: 'arraybutton', option: { type: 'button', label: 'Add' } }\n  ]\n}\n\nexport const option = { native: true }\nexport const components = {}\n\nexport const defineComponent = (tag, item) => {\n  if (typeof item === 'object') {\n    components[item.component] = {\n      component: tag,\n      option: { ...option, ...item.option }\n    }\n  } else {\n    components[item] = {\n      component: tag,\n      option\n    }\n  }\n}\n\nexport function renderFieldset (createElement, { props, slots }) {\n  const inputswrapper = components.inputswrapper\n  const vm = {}\n\n  const inputswrapperOptions = elementOptions(vm, inputswrapper)\n  const children = [\n    createElement(\n      inputswrapper.component, inputswrapperOptions, slots().default)\n  ]\n\n  if (props.field.description) {\n    const legend = components.legend\n    const legendOptions = elementOptions(vm, legend)\n\n    children.unshift(createElement(\n      legend.component, legendOptions, props.field.description))\n  }\n\n  return createElement('fieldset', {\n    attrs: {\n      name: props.field.attrs.name\n    }\n  }, children)\n}\n\nexport function init () {\n  for (let tag in tags) {\n    if (tags[tag] instanceof Array) {\n      tags[tag].forEach((item) => defineComponent(tag, item))\n    } else {\n      tags[tag].typed.forEach((type) => {\n        defineComponent(tag, { component: type, option: { type } })\n      })\n    }\n  }\n\n  components.radiogroup.render = renderFieldset\n  components.checkboxgroup.render = renderFieldset\n}\n\nexport function set (type, component, option = {}) {\n  if (typeof component !== 'string') {\n    option = component\n    component = undefined\n  }\n\n  const render = option.render\n  const defaultOption = components[type]\n    ? { ...components[type].option }\n    : {}\n\n  delete defaultOption.native\n\n  components[type] = { type, component, option, render, defaultOption }\n}\n\nexport function elementOptions (vm, el, extendingOptions = {}, field = { attrs: {} }, item = {}) {\n  const attrName = el.option.native ? 'attrs' : 'props'\n  const elProps = typeof el.option === 'function'\n    ? { ...extendingOptions, ...el.option({ vm, field, item }) }\n    : { ...el.option, native: undefined, ...extendingOptions }\n\n  return {\n    [attrName]: {\n      ...el.defaultOption,\n      ...elProps\n    }\n  }\n}\n\nexport const groupedArrayTypes = [\n  'radio', 'checkbox', 'input', 'textarea'\n]\n\nexport function input ({ vm, field, ref }) {\n  const attrs = field.attrs\n\n  if (!attrs.hasOwnProperty('value')) {\n    attrs.value = vm.data[attrs.name]\n  }\n\n  const element = field.hasOwnProperty('items') && groupedArrayTypes.includes(attrs.type)\n    ? components[`${attrs.type}group`] || components.defaultGroup\n    : components[attrs.type] || components.text\n\n  const fieldOptions = elementOptions(vm, element, attrs, field)\n\n  return {\n    ref: ref || attrs.name,\n    element: element,\n    domProps: {},\n    on: {\n      input: (event) => {\n        vm.data[attrs.name] = event && event.target\n          ? event.target.value\n          : event\n\n        /**\n         * Fired synchronously when the value of an element is changed.\n         */\n        vm.$emit('input', vm.data)\n      },\n      change: vm.changed\n    },\n    ...fieldOptions\n  }\n}\n\nexport const fieldTypesAsNotArray = [\n  'radio', 'textarea', 'select'\n]\n\nexport const inputName = (field, index) => `${field.attrs.name}-${index}`\n\nexport function initFields (vm) {\n  vm.fields.forEach((field) => {\n    const attrs = field.attrs\n\n    vm.data[attrs.name] = vm.value[attrs.name] || attrs.value\n\n    if (!fieldTypesAsNotArray.includes(attrs.type) && field.schemaType === 'array') {\n      field.isArrayField = true\n\n      if (!Array.isArray(vm.data[attrs.name])) {\n        vm.data[attrs.name] = []\n      }\n\n      vm.data[attrs.name] = vm.data[attrs.name].filter((value, i) => {\n        vm.inputValues[inputName(field, i)] = value\n        return value !== undefined\n      })\n\n      field.itemsNum = attrs.type === 'checkbox'\n        ? field.items.length\n        : field.minItems\n    }\n  })\n\n  // vm.data = Object.seal(vm.data)\n\n  if (!equals(vm.data, vm.value)) {\n    /**\n     * @private\n     */\n    vm.$emit('input', vm.data)\n  }\n\n  Object.keys(vm.data).forEach((key) => {\n    vm.default[key] = typeof vm.data[key] === 'object' && vm.data[key] !== null\n      ? Object.freeze(vm.data[key])\n      : vm.data[key]\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/components.js","import { components, input as getInput } from '../lib/components'\nimport FormSchemaInput from './FormSchemaInput'\nimport FormSchemaWrappingInput from './FormSchemaWrappingInput'\n\nexport default {\n  functional: true,\n  render (createElement, context) {\n    const { vm, item, ref, field, inputWrappingClass } = context.props\n\n    const attrs = field.attrs\n    const element = components[attrs.type]\n    const description = item.description\n    const input = getInput({\n      ref,\n      vm,\n      field: {\n        label: item.label,\n        attrs: {\n          name: item.name || attrs.name,\n          type: attrs.type,\n          value: item.value,\n          checked: typeof context.props.checked === 'undefined'\n            ? vm.data[attrs.name] instanceof Array\n              ? vm.data[attrs.name].includes(item.value)\n              : item.value === vm.data[attrs.name]\n            : context.props.checked\n        }\n      }\n    })\n\n    return createElement(FormSchemaWrappingInput, {\n      props: {\n        vm, field, element, inputWrappingClass\n      }\n    }, [\n      createElement(FormSchemaInput, {\n        props: {\n          vm, field: { ...field, ...item }, input, element, description\n        }\n      })\n    ])\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FormSchemaFieldCheckboxItem.js","'use strict'\n\n/* eslint-disable no-labels */\n\nconst ARRAY_KEYWORDS = ['anyOf', 'oneOf', 'enum']\n\nexport function setCommonFields (schema, field) {\n  field.attrs.value = field.attrs.hasOwnProperty('value')\n    ? field.attrs.value\n    : schema.default || ''\n\n  field.schemaType = schema.type\n  field.label = schema.title || ''\n  field.description = schema.description || ''\n  field.attrs.required = schema.required || false\n  field.attrs.disabled = schema.disabled || false\n}\n\nexport function loadFields (schema, fields, name = null) {\n  if (!schema || schema.visible === false) {\n    return\n  }\n\n  switch (schema.type) {\n    case 'object':\n      for (let key in schema.properties) {\n        if (schema.required) {\n          for (let field of schema.required) {\n            schema.properties[field].required = true\n          }\n        }\n\n        loadFields(schema.properties[key], fields, key)\n      }\n      break\n\n    case 'boolean':\n      fields.push(parseBoolean(schema, name))\n      break\n\n    case 'array':\n      fields.push(parseArray(schema, name))\n      break\n\n    case 'integer':\n    case 'number':\n    case 'string':\n      for (let keyword of ARRAY_KEYWORDS) {\n        if (schema.hasOwnProperty(keyword)) {\n          schema.items = {\n            type: schema.type,\n            enum: schema[keyword]\n          }\n          fields.push(parseArray(schema, name))\n\n          return\n        }\n      }\n      fields.push(parseString(schema, name))\n      break\n  }\n}\n\nexport function parseBoolean (schema, name = null) {\n  const field = {\n    attrs: schema.attrs || {}\n  }\n\n  setCommonFields(schema, field)\n\n  if (!field.attrs.type) {\n    field.attrs.type = 'checkbox'\n  }\n\n  field.attrs.checked = schema.checked || false\n\n  if (name) {\n    field.attrs.name = name\n  }\n\n  return field\n}\n\nexport function parseString (schema, name = null) {\n  const field = {\n    attrs: schema.attrs || {}\n  }\n\n  if (schema.pattern) {\n    field.attrs.pattern = schema.pattern\n  }\n\n  if (schema.format) {\n    switch (schema.format) {\n      case 'email':\n        if (!field.attrs.type) {\n          field.attrs.type = 'email'\n        }\n        break\n\n      case 'uri':\n        if (!field.attrs.type) {\n          field.attrs.type = 'url'\n        }\n        break\n    }\n  }\n\n  if (!field.attrs.type) {\n    switch (schema.type) {\n      case 'number':\n      case 'integer':\n        field.attrs.type = 'number'\n        break\n      default:\n        field.attrs.type = 'text'\n    }\n  }\n\n  setCommonFields(schema, field)\n\n  if (name) {\n    field.attrs.name = name\n  }\n\n  if (schema.minLength) {\n    field.attrs.minlength = schema.minLength\n  }\n\n  if (schema.maxLength) {\n    field.attrs.maxlength = schema.maxLength\n  }\n\n  return field\n}\n\nexport function parseItems (items) {\n  return items.map((item) => {\n    if (typeof item !== 'object') {\n      return { value: item, label: item }\n    }\n\n    return item\n  })\n}\n\nexport const setItemName = (name) => (item) => {\n  if (!item.name) {\n    item.name = name ? `${name}-` : ''\n    item.name += item.label.replace(/\\s+/g, '-')\n  }\n\n  return item\n}\n\nexport function arrayValues (field) {\n  return field.items.map((item) => item.checked ? item.value : undefined)\n}\n\nexport function singleValue (field) {\n  const item = field.items.reverse().find((item) => item.checked || item.selected)\n\n  return item ? item.value : ''\n}\n\nexport function parseArray (schema, name = null) {\n  const field = {\n    attrs: schema.attrs || {}\n  }\n\n  setCommonFields(schema, field)\n\n  if (name) {\n    field.attrs.name = name\n  }\n\n  field.items = []\n  field.minItems = parseInt(schema.minItems) || 1\n  field.maxItems = parseInt(schema.maxItems) || 1000\n\n  loop:\n  for (let keyword of ARRAY_KEYWORDS) {\n    if (schema.hasOwnProperty(keyword)) {\n      switch (keyword) {\n        case 'enum':\n          if (!field.attrs.type) {\n            field.attrs.type = 'select'\n          }\n\n          field.items = parseItems(schema[keyword])\n          break loop\n\n        case 'oneOf':\n          field.attrs.type = 'radio'\n          field.attrs.value = field.attrs.value || ''\n          field.items = parseItems(schema[keyword]).map(setItemName(name))\n\n          if (field.attrs.value.length === 0) {\n            field.attrs.value = singleValue(field)\n          }\n          break loop\n\n        case 'anyOf':\n          field.attrs.type = 'checkbox'\n          field.attrs.value = field.attrs.value || []\n          field.items = parseItems(schema[keyword]).map(setItemName(name))\n\n          if (field.attrs.value.length === 0) {\n            field.attrs.value = arrayValues(field)\n          }\n          break loop\n      }\n    }\n  }\n\n  if (!field.attrs.type) {\n    field.attrs.type = 'text'\n  } else if (field.attrs.type === 'select') {\n    field.attrs.multiple = field.minItems > 1\n    field.attrs.value = field.attrs.value || field.attrs.multiple ? [] : ''\n\n    if (field.attrs.value.length === 0) {\n      field.attrs.value = field.attrs.multiple\n        ? arrayValues(field)\n        : singleValue(field)\n    }\n  }\n\n  return field\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/parser.js","import { loadFields } from '../lib/parser'\nimport { equals } from '../lib/object'\nimport { init, components, set, elementOptions, inputName, initFields } from '../lib/components'\nimport FormSchemaField from './FormSchemaField'\nimport FormSchemaButtons from './FormSchemaButtons'\n\nconst fieldTypesAsNotArray = ['radio', 'checkbox', 'textarea', 'select']\n\ninit()\n\nexport const setComponent = set\n\nexport const FormSchema = {\n  name: 'form-schema',\n  props: {\n    /**\n     * The JSON Schema object. Use the `v-if` directive to load asynchronous schema.\n     * @type [Object, Promise]\n     */\n    schema: { type: [Object, Promise], required: true },\n\n    /**\n     * Use this directive to create two-way data bindings with the component. It automatically picks the correct way to update the element based on the input type.\n     * @model\n     * @default {}\n     */\n    value: { type: Object, default: () => ({}) },\n\n    /**\n     * The URI of a program that processes the form information.\n     */\n    action: { type: String },\n\n    /**\n     * This property indicates whether the value of the control can be automatically completed by the browser. Possible values are: `off` and `on`.\n     */\n    autocomplete: { type: String },\n\n    /**\n     * When the value of the method attribute is post, enctype is the MIME type of content that is used to submit the form to the server. Possible values are:\n     * - application/x-www-form-urlencoded: The default value if the attribute is not specified.\n     * - multipart/form-data: The value used for an <input> element with the type attribute set to \"file\".\n     * - text/plain (HTML5)\n     */\n    enctype: { type: String, default: 'application/x-www-form-urlencoded' },\n\n    /**\n     * The HTTP method that the browser uses to submit the form. Possible values are:\n     * - post: Corresponds to the HTTP POST method ; form data are included in the body of the form and sent to the server.\n     * - get: Corresponds to the HTTP GET method; form data are appended to the action attribute URI with a '?' as separator, and the resulting URI is sent to the server. Use this method when the form has no side-effects and contains only ASCII characters.\n     */\n    method: { type: String, default: 'post' },\n\n    /**\n     * This Boolean attribute indicates that the form is not to be validated when submitted.\n     */\n    novalidate: { type: Boolean },\n\n    /**\n     * Define the inputs wrapping class. Leave `undefined` to disable input wrapping.\n     */\n    inputWrappingClass: { type: String }\n  },\n  data: () => ({\n    schemaLoaded: {},\n    default: {},\n    fields: [],\n    error: null,\n    data: {},\n    inputValues: {}\n  }),\n  created () {\n    if (this.schema instanceof Promise) {\n      this.schema.then(this.init)\n    } else {\n      this.init(this.schema)\n    }\n  },\n  render (createElement) {\n    const nodes = []\n\n    if (this.schemaLoaded.title) {\n      nodes.push(createElement(\n        components.title.component, this.schemaLoaded.title))\n    }\n\n    if (this.schemaLoaded.description) {\n      nodes.push(createElement(\n        components.description.component, this.schemaLoaded.description))\n    }\n\n    if (this.error) {\n      const errorOptions = elementOptions(this, components.error)\n\n      nodes.push(createElement(\n        components.error.component, errorOptions, this.error))\n    }\n\n    const vm = this\n    const inputWrappingClass = this.inputWrappingClass\n    const formNodes = this.fields.map((field) => {\n      return createElement(FormSchemaField, {\n        props: { field, vm, inputWrappingClass }\n      })\n    })\n\n    if (formNodes.length) {\n      formNodes.push(createElement(FormSchemaButtons, this.$slots.default))\n\n      const formOptions = elementOptions(this, components.form, {\n        action: this.action,\n        enctype: this.enctype,\n        method: this.method,\n        autocomplete: this.autocomplete,\n        novalidate: this.novalidate\n      })\n\n      nodes.push(createElement(components.form.component, {\n        ref: '__form',\n        on: {\n          reset: this.reset,\n          submit: (event) => {\n            event.stopPropagation()\n            this.submit(event)\n          },\n          invalid: this.invalid\n        },\n        ...formOptions\n      }, formNodes))\n    }\n\n    return createElement('div', nodes)\n  },\n  setComponent: setComponent,\n  methods: {\n    /**\n     * @private\n     */\n    init (schema) {\n      this.schemaLoaded = schema || {}\n\n      loadFields(this.schemaLoaded, this.fields)\n      initFields(this)\n\n      this.data = Object.seal(this.data)\n    },\n\n    /**\n     * @private\n     */\n    changed () {\n      if (!equals(this.data, this.default)) {\n        /**\n         * Fired when a change to the element's value is committed by the user.\n         */\n        this.$emit('change', this.data)\n      }\n    },\n\n    /**\n     * Get a form input reference.\n     */\n    input (name) {\n      const controls = this.form().elements\n\n      if (!controls[name]) {\n        throw new Error(`Undefined input reference '${name}'`)\n      }\n      return controls[name]\n    },\n\n    /**\n     * Get the form reference.\n     */\n    form () {\n      return this.$refs.__form\n    },\n\n    /**\n     * Returns true if the element's child controls satisfy their validation constraints. When false is returned, cancelable invalid events are fired for each invalid child and validation problems are reported to the user.\n     */\n    reportValidity () {\n      const controls = this.form().elements\n      let validity = true\n\n      for (let i = 0; i < controls.length; i++) {\n        if ('checkValidity' in controls[i]) {\n          validity = validity && controls[i].checkValidity()\n        }\n      }\n\n      return validity\n    },\n\n    /**\n     * Checks whether the form has any constraints and whether it satisfies them. If the form fails its constraints, the browser fires a cancelable `invalid` event at the element, and then returns false.\n     * @aliasof reportValidity\n     */\n    checkValidity () {\n      return this.reportValidity()\n    },\n\n    /**\n     * @private\n     */\n    invalid (e) {\n      /**\n       * Fired when a submittable element has been checked and doesn't satisfy its constraints. The validity of submittable elements is checked before submitting their owner form, or after the `checkValidity()` of the element or its owner form is called.\n       */\n      this.$emit('invalid', e)\n    },\n\n    /**\n     * Reset the value of all elements of the parent form.\n     */\n    reset () {\n      for (let key in this.inputValues) {\n        delete this.inputValues[key]\n      }\n\n      this.fields.forEach((field) => {\n        const attrs = field.attrs\n\n        this.$set(this.data, attrs.name, this.default[attrs.name])\n\n        if (!fieldTypesAsNotArray.includes(attrs.type) && field.schemaType === 'array') {\n          this.data[attrs.name].forEach((value, i) => {\n            this.inputValues[inputName(field, i)] = value\n          })\n        }\n      })\n    },\n\n    /**\n     * Send the content of the form to the server.\n     */\n    submit (event) {\n      if (this.checkValidity()) {\n        /**\n         * Fired when a form is submitted\n         */\n        this.$emit('submit', event)\n      }\n    },\n\n    /**\n     * Set a message error.\n     */\n    setErrorMessage (message) {\n      this.error = message\n    },\n\n    /**\n     * clear the message error.\n     */\n    clearErrorMessage () {\n      this.error = null\n    }\n  }\n}\n\nexport default FormSchema\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FormSchema.js","import { components, input as getInput } from '../lib/components'\n\nexport default {\n  functional: true,\n  render (createElement, context) {\n    const { vm, option } = context.props\n\n    const input = getInput({\n      vm,\n      field: {\n        label: option.label,\n        attrs: {\n          type: undefined,\n          value: option.value,\n          selected: option.selected\n        }\n      }\n    })\n\n    return createElement(components.option.component, input, option.label)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FormSchemaFieldSelectOption.js","import { components, elementOptions } from '../lib/components'\n\nexport default {\n  functional: true,\n  render (createElement, { props, children }) {\n    const { vm, field, element } = props\n    let nodes = []\n\n    if (field.label && !element.option.disableWrappingLabel) {\n      const labelOptions = elementOptions(vm, components.label, {}, field)\n      let labelNodes = []\n\n      labelNodes.push(createElement('span', {\n        attrs: {\n          'data-required-field': field.attrs.required ? 'true' : 'false'\n        }\n      }, field.label))\n\n      labelNodes = labelNodes.concat(children)\n\n      nodes.push(createElement(\n        components.label.component, labelOptions, labelNodes))\n    } else {\n      nodes = children\n    }\n\n    if (props.inputWrappingClass) {\n      return createElement('div', {\n        class: props.inputWrappingClass\n      }, nodes)\n    }\n\n    return nodes\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FormSchemaWrappingInput.js","import { components, elementOptions, inputName } from '../lib/components'\nimport FormSchemaInputDescription from './FormSchemaInputDescription'\nimport FormSchemaInputArrayElement from './FormSchemaInputArrayElement'\n\nexport default {\n  functional: true,\n  render (createElement, context) {\n    const { description, field, element, input } = context.props\n    const children = context.slots().default || []\n\n    const descriptionElement = createElement(FormSchemaInputDescription, {\n      props: {\n        text: description || field.description\n      }\n    })\n\n    if (field.isArrayField) {\n      const vm = context.props.vm\n\n      if (field.attrs.type === 'checkbox') {\n        if (element.render) {\n          return element.render(createElement, context)\n        }\n\n        const ref = input.ref\n\n        return [\n          createElement(FormSchemaInputArrayElement, {\n            props: {\n              vm, ref, field, input, element\n            }\n          }, children),\n          descriptionElement\n        ]\n      }\n\n      const nodes = Array.apply(null, Array(field.itemsNum)).map((v, i) => {\n        const ref = inputName(field, i)\n\n        return createElement(FormSchemaInputArrayElement, {\n          props: {\n            vm, ref, field, input, element\n          }\n        }, children)\n      })\n\n      const labelOptions = elementOptions(vm, components.label, {}, field)\n      const button = components.arraybutton\n      const buttonOptions = {\n        ...elementOptions(vm, button, {\n          disabled: field.maxItems <= field.itemsNum\n        }, field),\n        on: {\n          click: () => {\n            if (field.itemsNum < field.maxItems) {\n              field.itemsNum++\n              vm.$forceUpdate()\n            }\n          }\n        }\n      }\n      const label = button.option.label || button.defaultOption.label\n      const buttonElement = createElement(\n        button.component, buttonOptions, label)\n\n      nodes.push(createElement(\n        components.label.component, labelOptions, [buttonElement]))\n\n      if (element.render) {\n        return element.render(createElement, {\n          ...context, slots: () => ({ default: nodes })\n        }, nodes)\n      }\n\n      nodes.push(descriptionElement)\n\n      return nodes\n    }\n\n    if (element.render) {\n      return element.render(createElement, context)\n    }\n\n    return [\n      createElement(element.component, input, children),\n      descriptionElement\n    ]\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FormSchemaInput.js"],"sourceRoot":""}